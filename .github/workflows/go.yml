name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
      id: go-test
    - name: Test
      run: go test -coverprofile=coverage.txt ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  build:
    name: Go Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
      id: go
    - name: Build
      run: go build ./...
  check_generate:
    name: Check generate
    runs-on: ubuntu-latest
    steps:
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: "29.x"
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
      id: go
    - name: make generate
      run: make generate && git diff --exit-code ':!*.pb'
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod' 
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          install-mode: goinstall
  check-goreleaser:
    name: Check GoReleaser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: check
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
