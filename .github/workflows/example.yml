name: Check Example

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check_docker_build:
    runs-on: ubuntu-latest
    name: Check Docker Build
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
    - name: Build
      uses: docker/build-push-action@v6
      with:
        context: ./example/multiple_package/server
        push: false
        cache-from: |
          type=gha,scope=master
          type=gha,scope=${{ github.ref_name }}
        cache-to: type=gha,mode=max,scope=${{ github.ref_name }}
        tags: test
        load: true
    - name: Run
      run: |
        echo "docker run"
        time docker run -d -p 5001:5001 test # RPC Server
        echo "reflection server"
        time go run example/multiple_package/main.go & # Reflection Server

        echo "check ls"
        time echo -e "example.multiple_package.protos.one.GiroService\nexample.multiple_package.protos.two.BqvService\ngrpc.health.v1.Health\ngrpc.reflection.v1.ServerReflection\ngrpc.reflection.v1alpha.ServerReflection\nrerost.giro.v1.HostService" > ls_expect.txt
        time go run cmd/giro/main.go ls > ls_result.txt
        time diff ls_result.txt ls_expect.txt

        echo "check call"
        time echo "{\"message\":\"test\"}" > call_expect.txt
        time go run cmd/giro/main.go call --rpc-server=localhost:5001 example.multiple_package.protos.one.GiroService/GiroTest1 '{"message": "test"}' > call_result.txt
        time diff call_result.txt call_expect.txt
        
        echo "check empty call"
        time echo "{}" > empty_call_expect.txt
        time go run cmd/giro/main.go call --rpc-server=localhost:5001 example.multiple_package.protos.one.GiroService/GiroEmptyTest '{}' > empty_call_result.txt
        time diff empty_call_result.txt empty_call_expect.txt

  check_make_protoc:
    runs-on: ubuntu-latest
    name: Check `make protoc`
    steps:
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: "29.x"
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'go.mod'
    - uses: ruby/setup-ruby@v1
      with:
        working-directory: example/multiple_package/
    - name: Install grpc_tools_ruby_protoc
      run: gem install grpc-tools
    - name: Check
      run: cd example/multiple_package/ &&  make protoc && git diff --exit-code
